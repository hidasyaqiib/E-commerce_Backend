{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "Documentation for the Bookstore API",
        "contact": {
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "List all categories",
                "description": "Retrieve all product categories",
                "operationId": "listCategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    {
                                        "id": 1,
                                        "name": "Electronics",
                                        "admin_id": 1
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "description": "Admin only: Create a new product category",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Gadgets"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Category created successfully",
                                    "data": {
                                        "id": 2,
                                        "name": "Gadgets",
                                        "admin_id": 1
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a category by ID",
                "description": "Retrieve a specific category with its products",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "id": 1,
                                    "name": "Electronics",
                                    "products": [
                                        {
                                            "id": 1,
                                            "name": "Smartphone",
                                            "price": 1000000
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category",
                "description": "Admin only: Update an existing category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Category Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Category updated successfully",
                                    "data": {
                                        "id": 1,
                                        "name": "Updated Category Name",
                                        "admin_id": 1
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "description": "Admin only: Delete a category if it has no associated products",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Category deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category cannot be deleted, it has associated products"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/detail-transactions": {
            "get": {
                "tags": [
                    "DetailTransaction"
                ],
                "summary": "List all detail transactions",
                "description": "Retrieve all detail transactions with their related transaction and product",
                "operationId": "listDetailTransactions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    {
                                        "id": 1,
                                        "transaction_id": 1,
                                        "product_id": 1,
                                        "quantity": 2,
                                        "status": "pending"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DetailTransaction"
                ],
                "summary": "Add a new detail transaction",
                "description": "Admin only: Create a new detail transaction",
                "operationId": "storeDetailTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transaction_id",
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "transaction_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Detail transaction added successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Detail transaction added successfully",
                                    "detail": {
                                        "id": 5,
                                        "transaction_id": 1,
                                        "product_id": 2,
                                        "quantity": 3,
                                        "status": "pending"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/detail-transactions/{transaction_id}": {
            "get": {
                "tags": [
                    "DetailTransaction"
                ],
                "summary": "Show details of a specific transaction",
                "description": "Retrieve detail transactions by transaction ID",
                "operationId": "showDetailTransaction",
                "parameters": [
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "transaction": {
                                        "id": 1,
                                        "customer_id": 1,
                                        "total_amount": 50000
                                    },
                                    "details": [
                                        {
                                            "id": 1,
                                            "product_id": 1,
                                            "quantity": 2,
                                            "status": "pending"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/detail-transactions/{id}": {
            "put": {
                "tags": [
                    "DetailTransaction"
                ],
                "summary": "Update a detail transaction",
                "description": "Admin only: Update quantity of a detail transaction",
                "operationId": "updateDetailTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the detail transaction to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Detail transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Detail transaction updated successfully",
                                    "detail": {
                                        "id": 1,
                                        "transaction_id": 1,
                                        "product_id": 1,
                                        "quantity": 5,
                                        "status": "pending"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DetailTransaction"
                ],
                "summary": "Delete a detail transaction",
                "description": "Admin only: Delete a detail transaction by ID",
                "operationId": "deleteDetailTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the detail transaction to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail transaction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Detail transaction deleted successfully"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "List Products",
                "description": "Retrieve a list of products",
                "operationId": "listProduct",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    {
                                        "id": 1,
                                        "name": "Product A",
                                        "price": 10000,
                                        "stock": 50,
                                        "category_id": 1
                                    },
                                    {
                                        "id": 2,
                                        "name": "Product B",
                                        "price": 20000,
                                        "stock": 30,
                                        "category_id": 2
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new Product",
                "description": "Create a new product record",
                "operationId": "createProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "stock",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Product"
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 15000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Product created successfully",
                                    "data": {
                                        "id": 3,
                                        "name": "New Product",
                                        "price": 15000,
                                        "stock": 100,
                                        "category_id": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a Product by ID",
                "description": "Retrieve a single product by its ID",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "id": 1,
                                    "name": "Product A",
                                    "price": 10000,
                                    "stock": 50,
                                    "category_id": 1
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update a Product",
                "description": "Update an existing product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product"
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 17000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Product updated successfully",
                                    "data": {
                                        "id": 1,
                                        "name": "Updated Product",
                                        "price": 17000,
                                        "stock": 60,
                                        "category_id": 2
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a Product",
                "description": "Delete a product by ID",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Product deleted successfully"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "List all transactions",
                "description": "Retrieve all transactions with related customers and transaction details",
                "operationId": "listTransactions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    {
                                        "id": 1,
                                        "customer_id": 1,
                                        "grand_total": 250000,
                                        "payment_method": "credit_card",
                                        "status": "pending",
                                        "details": [
                                            {
                                                "product_id": 2,
                                                "quantity": 1,
                                                "subtotal": 250000
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a new transaction",
                "description": "Customer can create a new transaction with multiple products",
                "operationId": "storeTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "payment_method",
                                    "details"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "credit_card"
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Transaction created successfully",
                                    "transaction": {
                                        "id": 1,
                                        "customer_id": 1,
                                        "grand_total": 250000,
                                        "payment_method": "credit_card",
                                        "status": "pending",
                                        "details": [
                                            {
                                                "product_id": 2,
                                                "quantity": 1,
                                                "subtotal": 250000
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/transactions/{id}/status": {
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update transaction status",
                "description": "Admin can update the status of a transaction",
                "operationId": "updateTransactionStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "shipped",
                                            "completed",
                                            "canceled"
                                        ],
                                        "example": "paid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction status updated",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Transaction status updated",
                                    "transaction": {
                                        "id": 1,
                                        "status": "paid"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/transactions/{id}/cancel": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancel a transaction",
                "description": "Customer can cancel their own pending transactions",
                "operationId": "cancelTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction canceled successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Transaction canceled successfully",
                                    "transaction": {
                                        "id": 1,
                                        "status": "canceled"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "400": {
                        "description": "Cannot cancel processed transaction"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers",
                "operationId": "2b23ac696cfd81c23807c2c1fd63b0b0",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get a customer by ID",
                "operationId": "d51ce35bfe185b82c242dd4443ffba54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer data"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update a customer",
                "operationId": "07a3f33c1373d3c6a97b7d8846d81472",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer",
                "operationId": "634844e24d72540f608f7fd297f5d8b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "DetailTransaction",
            "description": "DetailTransaction"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Transaction",
            "description": "Transaction"
        },
        {
            "name": "Customers",
            "description": "Customers"
        }
    ]
}